<!--
   The contents of this file are subject to the terms
   of the Common Development and Distribution License
   (the License). You may not use this file except in
   compliance with the License.

   You can obtain a copy of the License at
   https://opensso.dev.java.net/public/CDDLv1.0.html or
   opensso/legal/CDDLv1.0.txt
   See the License for the specific language governing
   permission and limitations under the License.

   When distributing Covered Code, include this CDDL
   Header Notice in each file and include the License file
   at opensso/legal/CDDLv1.0.txt.
   If applicable, add the following below the CDDL Header,
   with the fields enclosed by brackets [] replaced by
   your own identifying information:
   "Portions Copyrighted [year] [name of copyright owner]"

   $Id: build.xml,v 1.2 2007-04-02 22:01:43 pbryan Exp $

   Copyright 2007 Sun Microsystems Inc. All Rights Reserved
   Portions Copyright 2007 Paul C. Bryan.
-->

<project name="openid" default="usage">

    <description>OpenID Extension for OpenSSO</description>

    <!-- hard-coded properties for now -->
    <property name="opensso.base" value="../.."/>
    <property name="amserver.base" value="${opensso.base}/products/amserver"/>
    <property name="amserver.war" value="${amserver.base}/built/dist/opensso.war"/>
    <property name="extlib" value="${opensso.base}/products/extlib"/>

    <!-- directory to store intermediate files for build -->
    <property name="package.dir" value="package"/>
    <property name="package.classes" value="${package.dir}/WEB-INF/classes"/>
    <property name="package.lib" value="${package.dir}/WEB-INF/lib"/>
    <property name="package.webxml" value="${package.dir}/WEB-INF/web.xml"/>

    <!-- directory to store build results -->
    <property name="built.dir" value="built"/>
    <property name="dist.dir" value="${built.dir}/dist"/>

    <!-- local to openid extension -->
    <property name="openid.src" value="source"/>
    <property name="openid.webxml" value="xml/web.xml"/>

    <!-- class that will be used to insert entries into deployment descriptor -->
    <property name="insertClassname" value="com.sun.identity.setup.InsertContent"/>
    <property name="insertClasspath" value="${amserver.base}/built/classes"/>

    <!-- overridable properties -->
    <property name="build.debug" value="on"/>
    <property name="build.debuglevel" value="lines,vars,source"/>

    <!-- clean any directories created during build -->
    <target name="clean">
        <delete dir="${built.dir}"/>
        <delete dir="${package.dir}"/>
    </target>

    <!-- generate the opensso.war file including the openid extension -->
    <target name="war">

        <!-- fail gracefully if the amserver opensso.war file hasn't yet been built -->
        <available property="warAvailable" file="${amserver.war}" type="file"/>
        <fail message="amserver product war must be built first" unless="warAvailable"/>

        <!-- clean out any old package extraction and extract a new version of opensso.war -->
        <delete dir="${package.dir}"/>
        <unjar src="${amserver.war}" dest="${package.dir}"/>

        <!-- compile the openid classes into the target package -->
        <javac memoryInitialSize="256m" memoryMaximumSize="512m" fork="true"
         destdir="${package.classes}" source="1.4" target="1.4"
         debug="${build.debug}" debuglevel="${build.debuglevel}">
            <src path="${openid.src}"/>
            <classpath>
                <pathelement path="${package.classes}"/>
                <fileset dir="${extlib}"><include name="**/*.jar"/></fileset>
                <fileset dir="${package.lib}"><include name="**/*.jar"/></fileset>
            </classpath>
        </javac>

        <!-- insert servlet declarations into amserver deployment descriptor -->
        <java classpath="${insertClasspath}" classname="${insertClassname}" fork="true">
            <arg value="&lt;servlet&gt;.+?&lt;/servlet&gt;"/>
            <arg value="${openid.webxml}"/>
            <arg value="${package.webxml}"/>
            <arg value="&lt;!-- servlet declaration --&gt;"/>
        </java>

        <!-- insert servlet-mapping declarations into amserver deployment descriptor -->
        <java classpath="${insertClasspath}" classname="${insertClassname}" fork="true">
            <arg value="&lt;servlet-mapping&gt;.+?&lt;/servlet-mapping&gt;"/>
            <arg value="${openid.webxml}"/>
            <arg value="${package.webxml}"/>
            <arg value="&lt;!-- servlet mapping --&gt;"/>
        </java>

        <mkdir dir="${dist.dir}"/>

        <!-- package up a new war file with openid extension -->
        <war destfile="${dist.dir}/opensso.war" webxml="${package.webxml}">
            <zipfileset dir="${package.dir}" />
        </war>

    </target>

    <!-- display usage message (default task) -->
    <target name="usage">
        <echo message=" "/>
        <echo message="The following targets are available:"/>
        <echo message=" "/>
        <echo message="  clean : cleans any generated files"/>
        <echo message="  usage : displays this usage message"/>
        <echo message="  war   : creates the WAR file for deployment"/>
        <echo message=" "/>
        <echo message="To run a target, issue the following command:"/>
        <echo message=" "/>
        <echo message="  ant &lt;target-name&gt;"/>
        <echo message=" "/>
    </target>

</project>
