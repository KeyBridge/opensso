<!--
   The contents of this file are subject to the terms
   of the Common Development and Distribution License
   (the License). You may not use this file except in
   compliance with the License.

   You can obtain a copy of the License at
   https://opensso.dev.java.net/public/CDDLv1.0.html or
   opensso/legal/CDDLv1.0.txt
   See the License for the specific language governing
   permission and limitations under the License.

   When distributing Covered Code, include this CDDL
   Header Notice in each file and include the License file
   at opensso/legal/CDDLv1.0.txt.
   If applicable, add the following below the CDDL Header,
   with the fields enclosed by brackets [] replaced by
   your own identifying information:
   "Portions Copyrighted [year] [name of copyright owner]"

   $Id: build.xml,v 1.4 2006-11-06 05:22:47 qcheng Exp $

   Copyright 2006 Sun Microsystems Inc. All Rights Reserved
-->

<project name="Open Federation" default="usage">
                
    <description>Open Federation</description>

    <import file="../../products.xml" />
    <import file="../library/library.xml" />
    <import file="openfm.xml" />

    <!-- user specific properties -->
    <property file="${user.home}/.opensso"/>

    <!-- overridable properties -->
    <property name="build.debug" value="on"/>
    <property name="build.debuglevel" value="lines,vars,source"/>

    <!-- build class path -->
    <path id="build.class.path">
        <pathelement location="${openfm.classes.dir}"/>
        <pathelement location="${library.classes.dir}"/>
        <pathelement location="${sharedlib.classes.dir}"/>
        <fileset dir="${extlib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${openfm.extlib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${library.extlib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="build" depends="preparebuild">
	<javac memoryInitialSize="256m" memoryMaximumSize="512m" fork="true"
                destdir="${openfm.classes.dir}" source="1.4" target="1.5"
	        debug="${build.debug}" debuglevel="${build.debuglevel}"
                srcdir="${openfm.src.dir}">
            <classpath refid="build.class.path"/>
            <compilerarg value="-Xlint:deprecation" />
            <exclude name="**/com/sun/identity/federation/cli/**" />
	</javac>

        <javac destdir="${openfm.classes.dir}" source="1.5" target="1.5" 
            srcdir="${openfm.src.dir}/com/sun/identity/federation/cli"
            debug="${build.debug}" debuglevel="${build.debuglevel}">
            <classpath refid="build.class.path"/>
            <compilerarg value="-Xlint:deprecation" />
            <compilerarg value="-Xlint:unchecked" />
            <include name="**/*.java"/>
        </javac>
        <java classname="com.sun.identity.cli.tools.CLIDefinitionGenerator">
            <classpath refid="build.class.path"/>
            <arg value="${openfm.res.dir}"/>
            <arg value="com.sun.identity.federation.cli.definition.FederationManager"/>
        </java>

    </target>

    <target name="nightly">
        <antcall target="war" />
        <antcall target="unittest" />
        <antcall target="clientsdk" />
        <antcall target="samples" />
        <antcall target="clientsamples" />
        <antcall target="doc" />
        <filter token="DATE" value="${nightly.date}" />
        <copy file="${openfm.docs.dir}/nightly.html" tofile="${fm.dist.dir}/index.html" filtering="true" />
    </target>

    <target name="war" depends="build">
        <ant antfile="${openfm.dir}/build-war.xml" inheritRefs="true"/>
    </target>

    <target name="samples" depends="war">
         <ant antfile="${openfm.samples.dir}/build.xml" inheritRefs="true"/>
    </target>

    <target name="clientsdk" depends="build">
        <ant antfile="${openfm.clientsdkbase.dir}/build.xml" inheritRefs="true"/>
    </target>

    <target name="clientsamples" depends="clientsdk">
         <ant antfile="${openfm.clientsamples.dir}/build.xml" inheritRefs="true"/>
    </target>

    <target name="doc" depends="preparebuild">
        <javadoc maxmemory="512m" destdir="${openfm.built.apidocs.dir}" 
            windowtitle="Open Federation API" failonerror="true">
            <classpath refid="build.class.path"/>
            <packageset dir="${openfm.src.dir}">
                <include name="com/sun/identity/federation/**"/>
                <include name="com/sun/identity/liberty/ws/**"/>
                <include name="com/sun/identity/plugin/**"/>
                <include name="com/sun/identity/saml/**"/>
                <include name="com/sun/identity/saml2/**"/>
                <include name="com/sun/liberty/**"/>
            </packageset>
            <link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
            <link href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api/"/>
        </javadoc>
    </target>

    <target name="checklib">
        <ant antfile="${openfm.dir}/check-openfm-jars.xml" target="all" inheritRefs="true"/>
    </target>

    <target name="preparebuild" depends="checklib" >
        <mkdir dir="${openfm.built.dir}"/>
        <mkdir dir="${openfm.classes.dir}"/>
        <mkdir dir="${openfm.built.docs.dir}"/>
        <mkdir dir="${openfm.built.apidocs.dir}"/>
    </target>

    <target name="clean" depends="war-clean,samples-clean,unittest-clean,clientsdk-clean,clientsamples-clean">
        <delete dir="${openfm.built.apidocs.dir}"/>
        <delete dir="${openfm.built.docs.dir}"/>
        <delete dir="${openfm.classes.dir}"/>
        <delete dir="${openfm.built.dir}"/>
    </target>
  
    <target name="war-clean">
        <ant antfile="${openfm.dir}/build-war.xml" inheritRefs="true" target="clean"/>
    </target>

    <target name="clientsdk-clean">
        <ant antfile="${openfm.clientsdkbase.dir}/build.xml"
            inheritRefs="true" target="clean"/>
    </target>

    <target name="unittest" depends="build">
        <ant antfile="${openfm.unittest.dir}/build.xml" target="all" inheritRefs="true"/>
    </target>

    <target name="unittest-clean">
        <ant antfile="${openfm.unittest.dir}/build.xml" inheritRefs="true" target="clean"/>
    </target>
  
    <target name="extlib-clean">
        <delete file="${openfm.extlib.dir}/amclientsdk.jar"/>
        <delete file="${openfm.extlib.dir}/opensso.jar"/>
        <delete file="${openfm.extlib.dir}/opensso-test.jar"/>
        <delete file="${openfm.extlib.dir}/opensso.war"/>
    </target>
  
    <target name="samples-clean">
        <ant antfile="${openfm.samples.dir}/build.xml" inheritRefs="true"
            target="clean"/>
    </target>

    <target name="clientsamples-clean">
        <ant antfile="${openfm.clientsamples.dir}/build.xml" inheritRefs="true"
            target="clean"/>
    </target>

    <target name="usage">
        <echo message=" "/>
        <echo message=" Following targets are available:"/>
        <echo message=" "/>
        <echo message=" build               : compiles the sources"/>
        <echo message=" nightly             : generates nightly build binaries"/>
        <echo message=" unittest            : generates unit test zip file"/>
        <echo message=" samples             : generates server samples war file"/>
        <echo message=" clientsamples       : generates client samples war file"/>
        <echo message=" war                 : creates WAR for deployment"/>
        <echo message=" clientsdk           : creates client SDK jar file"/>
        <echo message=" doc                 : creates javadocs"/>
        <echo message=" clean               : deletes the generated files"/>
        <echo message=" unittest-clean      : deletes the generated unit test resources"/>
        <echo message=" extlib-clean        : deletes the shared and amserver libraries under extlib "/>
        <echo message=" samples-clean       : deletes the generated server samples resources"/>
        <echo message=" clientsamples-clean : deletes the generated client samples resources"/>
        <echo message=" clientsdk-clean     : deletes the generated client SDK jar file"/>
        <echo message=" usage               : displays this usage message"/>
        <echo message=" "/>
        <echo message=" To run a target, issue the following command:"/>
        <echo message=" "/>
        <echo message=" ant &lt;target-name&gt;"/>
        <echo message=" "/>
    </target>

</project>
