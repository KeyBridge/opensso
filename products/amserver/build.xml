<!--
   The contents of this file are subject to the terms
   of the Common Development and Distribution License
   (the License). You may not use this file except in
   compliance with the License.

   You can obtain a copy of the License at
   https://opensso.dev.java.net/public/CDDLv1.0.html or
   opensso/legal/CDDLv1.0.txt
   See the License for the specific language governing
   permission and limitations under the License.

   When distributing Covered Code, include this CDDL
   Header Notice in each file and include the License file
   at opensso/legal/CDDLv1.0.txt.
   If applicable, add the following below the CDDL Header,
   with the fields enclosed by brackets [] replaced by
   your own identifying information:
   "Portions Copyrighted [year] [name of copyright owner]"

   $Id: build.xml,v 1.56 2007-12-08 01:12:37 cbasha Exp $

   Copyright 2005 Sun Microsystems Inc. All Rights Reserved
-->

<project name="opensso" default="usage">
                
    <description>Open Web Single Sign-On</description>
    <import file="../products.xml" />
    <import file="amserver.xml" />

    <property name="tracker" value="${amserver.basedir}/tracker.properties" />

    <touch file="${tracker}" />

    <!-- user specific properties -->
    <property file="${user.home}/.opensso"/>

    <!-- overridable properties -->
    <property name="build.debug" value="on"/>
    <property name="build.debuglevel" value="lines,vars,source"/>
    
    <tstamp>
        <format property="nightly.date" pattern="yyyyMMdd" offset="-1"
            unit="day"/>
    </tstamp>
    <!-- build class path -->
    <path id="build.class.path">
        <pathelement location="${amserver.classes.dir}"/>
        <pathelement location="${sharedlib.classes.dir}"/>
        <fileset dir="${lockhart.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${extlib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${jatolib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="checkjar">
        <ant antfile="${products.basedir}/build-checkjars.xml" inheritRefs="true" />
        <fail message="*** missing library ***">
            <condition>
	        <isset property="extlib.jar.exists"/>
            </condition>
        </fail>
    </target>

    <target name="build" depends="checkjar, preparebuild, sharedlib">
        <antcall target="idsvcs" />
        <javac memoryInitialSize="256m" memoryMaximumSize="512m" fork="true"
            destdir="${amserver.classes.dir}" source="1.4" target="1.4"
            debug="${build.debug}" debuglevel="${build.debuglevel}"
            excludes="${amserver_one_dot_five_targets}">
            <src path="${amserver.src.dir}"/>
            <classpath refid="build.class.path"/>
            <exclude name="**/package-info.java"/>
            <exclude name="**/com/sun/identity/tools/logdoc/*.java"/>
            <exclude name="**/com/sun/identity/cli/tools/*.java"/>
            <exclude name="**/com/sun/identity/cli/annotation/*.java"/>
            <exclude name="**/com/sun/identity/cli/definition/*.java"/>
        </javac>
        <antcall target="jaxrpc" />
        <javac memoryInitialSize="256m" memoryMaximumSize="512m" fork="true"
            destdir="${amserver.classes.dir}" source="1.5" target="1.5"
            debug="${build.debug}" debuglevel="${build.debuglevel}"
            includes="${amserver_one_dot_five_targets}">
            <src path="${amserver.src.dir}"/>
            <classpath refid="build.class.path"/>
            <exclude name="**/package-info.java"/>
        </javac>
        
        <copy todir="${amserver.built.res.dir}" flatten="true">
            <fileset dir="${amserver.res.i18n.dir}">
                <include name="**/*.properties"/>
                <exclude name="Services.properties"/>
                <exclude name="ums.properties"/>
                <exclude name="sso.properties"/>
                <exclude name="SMS.properties"/>
                <exclude name="authentication_util.properties"/>
            </fileset>
        </copy>

        <copy todir="${amserver.built.res.dir}">
            <fileset dir="${amserver.config.res.dir}">
                <include name="*.properties"/>
            </fileset>
            <fileset dir="${amserver.console.res.dir}">
                <include name="*.properties"/>
            </fileset>
            <fileset dir="${amserver.xml.dir}">
                <include name="*.xml"/>
            </fileset>
            <fileset dir="${amserver.console.xml.dir}">
                <include name="*.xml"/>
            </fileset>
            <fileset dir="${amserver.jaxrpc.xml.dir}">
                <include name="*.xml"/>
            </fileset>
            <fileset dir="${amserver.services.xml.dir}">
                <include name="*.xml"/>
            </fileset>
            <fileset dir="${amserver.authmodule.xml.dir}">
                <include name="*.xml"/>
            </fileset>
            <fileset dir="${amserver.dtd.xml.dir}">
                <include name="**/*.dtd"/>
                <exclude name="dtd/sms.dtd"/>
            </fileset>
        </copy>
        
        <concat destfile="${amserver.built.res.dir}/amSDK.properties">
            <fileset dir="${amserver.res.i18n.dir}">
                <include name="Services.properties"/>
                <include name="DSConfig.properties"/>
                <include name="ums.properties"/>
                <include name="sso.properties"/>
                <include name="SMS.properties"/>
                <include name="authentication_util.properties"/>
            </fileset>
        </concat>
        <copy file="${amserver.dtd.xml.dir}/smsflatfile.dtd" 
              todir="${amserver.classes.dir}/com/sun/identity/sm/flatfile"/>
        <copy file="${amserver.dtd.xml.dir}/policyAdmin.dtd" 
              todir="${amserver.classes.dir}/com/sun/identity/policy"/>
        <copy file="${amserver.dtd.xml.dir}/sms.dtd" 
              todir="${amserver.classes.dir}/com/sun/identity/sm"/>
        <copy todir="${amserver.classes.dir}/com/sun/identity/log/messageid">
              <fileset dir="${amserver.log.xml.dir}">
                <include name="*.xml" />
                <include name="*.dtd" />
              </fileset>
        </copy>
    </target>
    
    <target name="idsvcs" unless="amserver.idsvcs.done">
        <copy file="${amserver.warbase.dir}/xml/IdentityServices.wsdl"
            tofile="IdentityServices.wsdl" />
        <java classname="com.sun.xml.rpc.tools.wscompile.Main" fork="true">
            <classpath refid="build.class.path"/>
            <classpath>
                <pathelement path="${java.home}/../lib/tools.jar"/>
            </classpath>
            <arg value="-classpath" />
            <arg value="${amserver.classes.dir}:${extlib.dir}/jaxrpc-api.jar:${extlib.dir}/jaxrpc-impl.jar:${extlib.dir}/webservices-api.jar" />
            <arg value="-gen:server" />
            <arg value="-d" />
            <arg value="${amserver.classes.dir}" />
            <arg value="${amserver.jaxrpc.xml.dir}/IdentityServicesConfig.xml" />
        </java>
        <delete file="IdentityServices.wsdl" />
        <property name="amserver.idsvcs.done" value="true" />
        <concat destfile="${tracker}" append="true">amserver.idsvcs.done=true&#10;</concat>
    </target>

    <target name="jaxrpc" unless="amserver.jaxrpc.done">
        <java classname="com.sun.xml.rpc.tools.wscompile.Main" fork="true">
            <classpath refid="build.class.path"/>
            <classpath>
                <pathelement path="${java.home}/../lib/tools.jar"/>
            </classpath>
            <arg value="-classpath" />
            <arg value="${amserver.classes.dir}:${extlib.dir}/jaxrpc-api.jar:${extlib.dir}/jaxrpc-impl.jar:${extlib.dir}/webservices-api.jar" />
            <arg value="-gen:server" />
            <arg value="-d" />
            <arg value="${amserver.classes.dir}" />
            <arg value="${amserver.jaxrpc.xml.dir}/config.xml" />
        </java>
        <move file="${amserver.classes.dir}/IdentityManagementServices.wsdl" tofile="${amserver.classes.dir}/jaxrpc/IdentityManagementServices.wsdl" />

        <property name="amserver.jaxrpc.done" value="true" />
        <concat destfile="${tracker}" append="true">amserver.jaxrpc.done=true&#10;</concat>
    </target>

    <target name="sharedlib">
        <subant buildpath="${sharedlib.dir}/build.xml" target="all" />
    </target>

    <target name="doc" depends="preparebuild">
        <javadoc destdir="${amserver.built.apidocs.dir}" windowtitle="OpenSSO API">
            <classpath refid="build.class.path"/>
            <packageset dir="${amserver.src.dir}">
                <include name="com/iplanet/am/sdk/**"/>
                <include name="com/iplanet/sso/**"/>
                <include name="com/iplanet/dpro/**"/>
                <include name="com/sun/identity/session/**"/>
                <include name="com/sun/identity/authentication/**"/>
                <include name="com/sun/identity/policy/**"/>
                <include name="com/sun/identity/delegation/**"/>
                <include name="com/sun/identity/idm/**"/>
            </packageset>
            <tag name="supported.all.api" enabled="false" />
            <tag name="supported.api" enabled="false" />
            <link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
            <link href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api/"/>
        </javadoc>
    </target>

    <target name="publicdoc" depends="preparebuild">
        <javadoc destdir="${amserver.built.publicapidocs.dir}"
                 windowtitle="Public OpenSSO API">
            <classpath refid="build.class.path"/>
            <packageset dir="${amserver.src.dir}">
                <include name="com/iplanet/am/sdk/**"/>
                <include name="com/iplanet/sso/**"/>
                <include name="com/iplanet/dpro/**"/>
                <include name="com/sun/identity/session/**"/>
                <include name="com/sun/identity/policy/**"/>
                <include name="com/sun/identity/authentication/**"/>
                <include name="com/sun/identity/idm/**"/>
            </packageset>
            <doclet name="com.sun.identity.tools.javadocs.SupportedAPIDoclet"
                    path="${amserver.classes.dir}" />
            <tag name="supported.all.api" description="" />
            <tag name="supported.api" description="" />
            <tag name="supported.all.api" enabled="false" />
            <tag name="supported.api" enabled="false" />
            <link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
            <link href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api/"/>
        </javadoc>
    </target>

    <target name="jars" depends="unittest">
        <ant antfile="${amserver.basedir}/build-jars.xml" inheritRefs="true"/>
    </target>

    <target name="preparebuild">
        <mkdir dir="${amserver.built.dir}"/>
        <mkdir dir="${amserver.dist.dir}"/>
        <mkdir dir="${amserver.classes.dir}"/>
        <mkdir dir="${amserver.built.res.dir}"/>
        <mkdir dir="${amserver.built.docs.dir}"/>
        <mkdir dir="${amserver.built.apidocs.dir}"/>
        <mkdir dir="${amserver.built.publicapidocs.dir}"/>
        <copy file="${amserver.config.res.dir}/serverAttributeMap.properties"
            toFile="${amserver.classes.dir}/serverAttributeMap.properties" />
        <antcall target="preparecli" />
    </target>

    <target name="preparecli" unless="amserver.preparecli.done">
        <javac memoryInitialSize="256m" memoryMaximumSize="512m" fork="true"
            destdir="${amserver.classes.dir}" source="1.5" target="1.5"
            srcdir="${amserver.src.dir}/com/sun/identity/cli/annotation"
            debug="${build.debug}" debuglevel="${build.debuglevel}">
            <classpath refid="build.class.path"/>
            <include name="*.java"/>
        </javac>
                                                                               
        <javac memoryInitialSize="256m" memoryMaximumSize="512m" fork="true"
            destdir="${amserver.classes.dir}" source="1.5" target="1.5"
            srcdir="${amserver.src.dir}/com/sun/identity/cli/tools"
            debug="${build.debug}" debuglevel="${build.debuglevel}">
            <classpath refid="build.class.path"/>
            <include name="*.java"/>
        </javac>
                                                                               
        <javac memoryInitialSize="256m" memoryMaximumSize="512m" fork="true"
            destdir="${amserver.classes.dir}" source="1.5" target="1.5"
            srcdir="${amserver.src.dir}/com/sun/identity/cli/definition"
            debug="${build.debug}" debuglevel="${build.debuglevel}">
            <classpath refid="build.class.path"/>
            <include name="*.java"/>
        </javac>

        <java classname="com.sun.identity.cli.tools.CLIDefinitionGenerator">
            <classpath refid="build.class.path"/>
            <arg value="${amserver.res.i18n.dir}"/>
            <arg value="com.sun.identity.cli.definition.AccessManager"/>
        </java>
        
        <java classname="com.sun.identity.cli.tools.DefinitionStubCreator">
            <classpath refid="build.class.path"/>
            <arg value="com.sun.identity.cli.definition.AccessManager"/>
            <arg value="${amserver.src.dir}/com/sun/identity/cli/stubs/AccessManagerCLI.java"/>
            <arg value="com.sun.identity.cli.stubs"/>
        </java>

        <property name="amserver.preparecli.done" value="true" />
        <concat destfile="${tracker}" append="true">amserver.preparecli.done=true&#10;</concat>
    </target>

    <target name="clean" depends="nightly-clean,war-clean,jars-clean,clientsdk-clean,demo-clean,samples-clean,distauth-clean,unittest-clean">
        <delete dir="${amserver.built.publicapidocs.dir}"/>
        <delete dir="${amserver.built.apidocs.dir}"/>
        <delete dir="${amserver.built.docs.dir}"/>
        <delete dir="${amserver.built.res.dir}"/>
        <delete dir="${amserver.classes.dir}/jaxrpc"/>
        <delete dir="${amserver.classes.dir}"/>
        <delete dir="${amserver.built.dir}"/>
        <delete file="${amserver.src.dir}/com/sun/identity/cli/stubs/AccessManagerCLI.java"/>
        <delete file="${amserver.unittest.dir}/source/com/sun/identity/cli/stubs/MockCLI.java"/>
        <delete file="${tracker}" />
    </target>

    <target name="tools" depends="build,jars,prepXML">
        <ant antfile="${amserver.warbase.dir}/build.xml" inheritRefs="true"/>
        <ant antfile="${amserver.warbase.dir}/build.xml" target="session-tools"
            inheritRefs="true"/>        
    </target>
    
    <target name="war" depends="build,prepXML">
        <ant antfile="${amserver.base.dir}/build-jars.xml" target="openssojar" inheritRefs="true"/>
        <ant antfile="${amserver.warbase.dir}/build.xml" target="war"
            inheritRefs="true"/>
    </target>

    <target name="prepXML">
        <copy todir="${amserver.built.war.dir}/xml/services">
            <fileset dir="${amserver.services.xml.dir}">
                <include name="*.xml" />
            </fileset>
            <fileset dir="${amserver.xml.dir}">
                <include name="AccessManagerCLI.xml" />
            </fileset>
        </copy>
        <copy todir="${amserver.built.war.dir}/xml">
            <fileset dir="${amserver.xml.dir}">
                <include name="serverconfig.xml" />
            </fileset>
        </copy>
    </target>

    <target name="demo" depends="war">
        <ant antfile="${amserver.demobase.dir}/build.xml" inheritRefs="true"/>
    </target>

    <target name="samples" depends="clientsdk,war">
        <ant antfile="${amserver.samples.dir}/build.xml" inheritRefs="true"/>
    </target>

    <target name="distauth" depends="clientsdk,war">
        <ant antfile="${amserver.distauth.dir}/build.xml" inheritRefs="true"/>
    </target>

    <target name="nightly" depends="tools,publicdoc,doc,clientsdk,demo,samples,distauth,unittest">
        <tstamp>
            <format property="touch.time" pattern="yyyy-MMMM-d hh:mm"/>
        </tstamp>

        <filter token="DATE" value="${nightly.date}" />
         <echo>$$(nightly.date)=$(nightly.date)</echo>

        <copy file="${sharedlib.dist.dir}/opensso-sharedlib.jar"
            tofile="${amserver.dist.dir}/opensso-sharedlib.jar" />
        <copy file="${sharedlib.dist.dir}/opensso-sharedlib.jar.sha"
            tofile="${amserver.dist.dir}/opensso-sharedlib.jar.sha" />
        <copy file="${amserver.docs.dir}/nightly.html"
            tofile="${amserver.dist.dir}/index.html" filtering="true" />
    </target>

    <target name="nightly-clean">
        <delete dir="${amserver.dist.dir}" />
        <delete file="${tracker}" />
    </target>

    <target name="war-clean">
        <ant antfile="${amserver.warbase.dir}/build.xml" 
             inheritRefs="true" target="clean"/>
    </target>

    <target name="jars-clean">
        <ant antfile="${amserver.basedir}/build-jars.xml" inheritRefs="true" target="clean"/>
    </target>

    <target name="clientsdk" depends="build">
        <ant antfile="${amserver.clientsdkbase.dir}/build.xml" inheritRefs="true"/>
    </target>

    <target name="samples-clean">
        <ant antfile="${amserver.samples.dir}/build.xml"
             inheritRefs="true" target="clean"/>
    </target>

    <target name="distauth-clean">
        <ant antfile="${amserver.distauth.dir}/build.xml"
             inheritRefs="true" target="clean"/>
    </target>

    <target name="demo-clean">
        <ant antfile="${amserver.demobase.dir}/build.xml"
             inheritRefs="true" target="clean"/>
    </target>

    <target name="clientsdk-clean">
        <ant antfile="${amserver.clientsdkbase.dir}/build.xml"
             inheritRefs="true" target="clean"/>
    </target>

    <target name="unittest" depends="build">
        <ant antfile="${amserver.unittest.dir}/build.xml" target="all" inheritRefs="true"/>
    </target>

    <target name="unittest-clean">
        <ant antfile="${amserver.unittest.dir}/build.xml" inheritRefs="true" target="clean"/>
    </target>

    <target name="usage">
        <echo message=" "/>
        <echo message=" Following targets are available:"/>
        <echo message=" "/>
        <echo message=" build      : compiles the sources"/>
        <echo message=" publicdoc  : creates javadocs for publicly supported API"/>
        <echo message=" doc        : creates javadocs"/>
        <echo message=" clean      : deletes the generated files"/>
        <echo message=" jars       : create jars"/>
        <echo message=" jars-clean : deletes generated jars"/>
        <echo message=" war        : builds the WAR"/>
        <echo message=" tools      : builds the administration CLI tools.zip"/>
        <echo message=" war-clean  : deletes generated WAR"/>
        <echo message=" distauth   : builds the distauth zip"/>
        <echo message=" distauth-clean : deletes generated distauth zip"/>
        <echo message=" samples    : builds the client samples"/>
        <echo message=" samples-clean : deletes generated client samples"/>
        <echo message=" clientsdk  : builds the clientsdk jar/war"/>
        <echo message=" clientsdk-clean : deletes generated clientsdk files"/>
        <echo message=" nightly    : does nightly build"/>
        <echo message=" demo       : does demo build"/>
        <echo message=" demo-clean : delete demo generated files"/>
        <echo message=" unittest   : does unit test build"/>
        <echo message=" unittest-clean : delete unit test generated files"/>
        <echo message=" usage      : displays this usage message"/>
        <echo message=" "/>
        <echo message=" To run a target, issue the following command:"/>
        <echo message=" "/>
        <echo message=" ant &lt;target-name&gt;"/>
        <echo message=" "/>
    </target>
</project>
